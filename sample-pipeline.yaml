pipeline:
  name: optimise-gcp-2
  identifier: optimisegcp2
  projectIdentifier: CCMDemo
  orgIdentifier: sam
  tags: {}
  stages:
    - stage:
        name: consolidation
        identifier: consolidation
        description: ""
        type: Custom
        spec:
          execution:
            steps:
              - step:
                  type: ShellScript
                  name: ShellScript_1
                  identifier: ShellScript_1
                  spec:
                    shell: Bash
                    executionTarget: {}
                    source:
                      type: Inline
                      spec:
                        script: |
                          #!/bin/bash

                          set -euo pipefail

                          # ðŸ“¥ Input from Harness
                          payload='<+pipeline.variables.unattached_disks>'  # Replace with actual string when testing locally

                          echo "Raw payload:"
                          echo "$payload"

                          # Extract each disk entry (split into lines)
                          disks=$(echo "$payload" | tr '{' '\n' | grep '"name"')

                          echo "Parsed disk entries:"
                          echo "$disks"

                          # Start HTML table
                          html_content="<html><body><h2>GCP Unattached Disks</h2><table border='1' cellpadding='5'><tr><th>Project ID</th><th>Zone</th><th>Disk Name</th></tr>"

                          # Loop through each line
                          while read -r disk; do
                            disk_name=$(echo "$disk" | sed -n 's/.*"name":"\([^"]*\)".*/\1/p')
                            link=$(echo "$disk" | sed -n 's/.*"link":"\([^"]*\)".*/\1/p')
                            project_id=$(echo "$link" | sed -n 's#.*/projects/\([^/]*\)/.*#\1#p')
                            zone=$(echo "$link" | sed -n 's#.*/zones/\([^/]*\)/.*#\1#p')

                            if [[ -n "$disk_name" && -n "$project_id" && -n "$zone" ]]; then
                              html_content+="<tr><td>$project_id</td><td>$zone</td><td>$disk_name</td></tr>"
                            fi
                          done <<< "$disks"

                          html_content+="</table></body></html>"

                          # âœ… Output the HTML content for verification
                          echo "$html_content"
                    environmentVariables: []
                    outputVariables:
                      - name: html_content
                        type: String
                        value: html_content
                  timeout: 10m
              - step:
                  type: Email
                  name: Email_1
                  identifier: Email_1
                  spec:
                    to: samriddha.choudhuri@harness.io ##change to target email id 
                    cc: ""
                    subject: Harness Asset Governance:GCP Unattached Disks
                    body: <+pipeline.stages.consolidation.spec.execution.steps.ShellScript_1.output.outputVariables.html_content>
                  timeout: 10m
          environment:
            environmentRef: samsmacdonottouch #change to your infra
            deployToAll: false
            infrastructureDefinitions:
              - identifier: sammacdonotuse #change to your infra
        tags: {}
  variables:
    - name: unattached_disks
      type: String
      description: ""
      required: false
      value: <+input>
